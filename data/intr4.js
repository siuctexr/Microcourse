(function(){
	var loadHandler = window['i_{3D026E38-893F-422A-80AB-168839CA527D}'];
	var interactionJson = "";
	var skinSettings = {};
	loadHandler&&loadHandler(6, 'interactivity_9l0qvfq9dqmy', interactionJson, skinSettings);
	})();